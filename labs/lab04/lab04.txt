cs61c lect. 11
gal malloc how to call malloc, but first need to save arguments so store them in a0 registers
local storage lives in stack usually
y has no scope(no meaning)
segmentation violation(going to place which u don’t have access to)
printf(used stack or called someone who uses stack)
use malloc since it will stay there even when it returns since you reserved it and is gone until you free it
callerR is parent, calleE child
anytime that is not s’s 
ra is not saved volatile

push s0, a0, ra
calle can’t change so-s7

lab04 answers
1) What do the .data, .word, .text directives mean (i.e. what do you put in each section)?
The .data directive tells the assembler that the upcoming section is considered data.
The .word directive tells the assembler to place n words on in memory
The .text directive tells the assembler Store the listed value(s) as 32 bit words on word boundary
2) How do you set a breakpoint in MARS? Set a breakpoint on line 14 and run to it. What is the instruction address? Has line 14 executed yet?
You mark a check on the line number in the text segment, address:0x00400020, line 14 I don’t has executed

3) Once at a breakpoint, how do you continue to execute your code? How do you step through your code? Run the code to completion.
pushing play1 button

4) Find the "Run I/O" window. What number did the program output? Which fib number is this?
It outputted 34, which is the 9th fib number

5) At what address is n stored in memory? Try finding this by (1) looking at the Data Segment and (2) looking at the machine code (Code column in the Text Segment).
where? 
0x10010000


6) Without using the "Edit" tab, have the program calculate the 13th fib number by manually modifying this memory location before execution. You may find it helpful to uncheck the "Hexadecimal Values" box at the bottom of the Data Segment. it is 233
change 


7) How do you view and modify the contents of a register? Reset the simulation (Run-->Reset or F12) and now calculate the 13th fib number by (1) breaking at a well-chosen spot, (2) modifying a single register, and then (3) unsetting the breakpoint.Cool


8) Lines 19 and 21 use the syscall instruction. What is it and how do you use it? (Hint: look in Help)
it retrieves the return values, 1 print integer, 10 exit


part 4:Q1) lines 40 & 50
Q2) Uses hi and lo "commands" to shift bits.

Hey =D, happy birthday again, just wanted to tell you that you are an amazing person. Sucks not having you for a class remembering those good old summer bridge days. Although I haven’t seen you in a while, I know you will always be that sweet joyful friend one wishes. To finish just want to say keep smiling, you have a warm smile that can make anyone’s day(sure makes mine when I see you), and I only wish the best for you.
Sincerely Your Friend, Erick Andres. 


