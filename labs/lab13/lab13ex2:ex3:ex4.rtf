{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red246\green246\blue246;\red28\green28\blue28;
}
\margl1440\margr1440\vieww25340\viewh13220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Ex2:\
1-0F\
2-F2\
3-44\
4-85\
5-73\
6-A8\
7-3A\
8-C4\
9-0F\
10-F2\
\
Pattern to notice is make sure for page number bits to be different, so in this case first 3 bits. works since the first 2 entries will eventually be replaced in memory by the newer entries, and so they no longer exist.\
\
Ex3\
Increase RAM size so more pages fit to eliminate memory replacement and have the item in memory which does not result in a Page Fault since it is memory. Page fault  \cf2 \cb3 user program tries to access a page that is not in memory, either not yet allocated or swapped out\cf0 \cb1 . TLB miss refers to when there is no matching virtual address page number in TLB entries so memory item is not up to date.\
\
Could also decrease page size to fit more pages in RAM, since \cf4 smaller page sizes ensure a closer match to the actual amount of memory required in an allocation. However, this is only decreases page faults in small spread out accesses for reason stated.\
\
Ex4\
First, P1, P2, P3, and P4 are all different processes that constantly switch to one another after a while. While one is performing its operation, it updates the TLB. Because the TLB is constantly changing, the data the other processes thought they were going to have is now gone resulting in it not appering in tlb entries in tlb, so you get higher TLB misses. In addition, the TLB is small compared to the big page table, since again tlb constantly updated while page table still good since it can still fit stuff, not taking into account changes that had occurred a while back. So to solve maybe have each process have its own page table since this is for the software component which is causing the changes, so no need to modify current TLB since that is constant in hardware. TLB just swaps mapping for each process once it is its turn.\
remember sorting data helps maximize temporal locality because a recently used item will be accessed again\
\
}