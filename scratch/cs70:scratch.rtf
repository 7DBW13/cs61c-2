{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww25400\viewh12420\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 cs70 2b.IIII for all x in not N(x) -> not O(x)\
iV. for all x in not F(x) -> not B(x)\
2c)he or she only goes to a party unless they have gloves on them\
K(x) -> p(x) -> b(x) -> f(x) -> not U(x) -> not N(x) -> not nx. You go from not ux to not nx because you are trying to keep the form of the previous st. fx to not ux true.\
So a person who wears kid gloves is not an opium eater\
\
\
when you xor a number by itself you get zero\
\
\
for number nine use example of patrickjmt ex 3 of induction problem(I bookmarked it)\
look at page 404 ex13 of bookmarked page, page 405 has solution to #6a\
\
\
look for hard proof videos and try some problems\
JUST FOR YOUR INFORMATION WHEN WRITING IN MIPS USE LEAST AMOUNT OF REGISTERS AND INSTRUCTIONS IF YOU CAN AVOID USING CONDITIONS THEN DO SO\
\
\
FACT TO REMEMBER, HOLDING CAPACITANCE AND POWER CONSTANT, A CPU\'92S VOLTAGE MUST BE DECREASED BY FACTOR OF sqrt(2) TO ALLOW FOR A DOUBLING OF FREQUENCY.\
REMEMBER ASSUMING A CONSTANT CAPACITY, INCREASING A CACHE\'92S BLOCK SIZE(CACHE LINE SIZE), (IF IN THE CASE WE ARE TALKING ABOUT TAG AREA), DECREASES THE AMOUNT OF TAG STORAGE REQUIRED.\
ASSUMING A CONSTANT CAPACITY, INCREASING A CACHE\'92S BLOCK SIZE(CACHE LINE SIZE), (IF IN THE CASE WE ARE TALKING ABOUT TAG WIDTH), DOES NOT AFFECT AMOUNT OF TAG STORAGE REQUIRED.\
\
WHEN WORKING WITH HANDLES, (EX int **p; (pointer to pointer)), to iterate I guess you do while(*pointer(since looks at the current value of pointer(double pointer idea but 1 instead, 1 discussed with Andre))), \
to increment just do pointer++;\
\
for speedup problems, maybe we need to apply Amdal\'92s law\
saved registers do not need to be saved because of conventions i think\
remember what first fit, next fit, best fit\
for sign & mag you need to look at second bit to left to determine range REMEMBER\
the cannot execute binary file error arouses, assuming not a corrupted machine, then the executable was compiled on another machine with a different architecture and can\'92t be read, so recompile on current machine\
\
remember char are 1 byte apart\
\
when using tail recursion use j(jump) instead of jal(jump and link)\
2 compl range is -(2^n- 1) to  -(2^n -1 -1) bigger range for negatives(always i think)\
unsigned and two complement represent same range 2^32\
mix from # of instructions, CPI, and clock rate will determine how fast a program runs\
remember order of access of AMAT = (fastest) registers, L1 cache, L2 cache, Main Memory, Disk(pluto remember NOOO)\
cache/register = 1 main mem/reg = 100 disk / reg = 1000000\
\
remember that 1 comp. there are 2 zeroes 0000 &  1111\
\
ruby on rails starts on sept 11 check yahoo mail for more details  \
\
CS61C SP12\
2d) (Dest - PC - 4) / 4\
3a) temporal & spatial\
3b) highest in terms of pic(closest)\
3c)lowest in terms of pic(furthest from chip)\
3) 4 - 6 offset, 8 index, 18 tag\
3-5 double\
3-6) A\
3-7) A\
3-8) C\
3-9) A\
3-10) B(remember AMAT has nothing to do with cache\'92s hit rate)\
4) Compiler(converts c to mips), Assembler\
programmer, assembler\
Assembler(outputs .o files), Linker\
linker, loader\
4b) 2, 4(Interpreters do not require compilation, and can run on many different platforms)\
1,4(compilers produce programs that run fast, harder to reverse engineer compiled over interpreted)\
5a) 4,4,8(remember that sizeof(&something) is the same as sizeof(something[0])) since pointers always point to address at start   \
(I think these next 2 lines apply to #6)3 so 32 + null terminator bytes or is it just 12 bytes\
remember strings are 1 byte apart, so if it is word aligned, 1 word =  4bytes, you increment by 4 instead of 1 to move forward\
left off at ?7\
skipped 7c\
skipped 7e\
\
NOTES FROM CS61C TA REVIEW SESSION\
UNSIGNED-always increasing, NO negative numbers, 1 zero, continuous\
SIGN AND MAGNITUDE-increases then decreases, allows negative numbers, (plus minus)2 zeros, discontinuity \
1\'92s COMPLEMENT- always increasing, allows negative numbers, (plus minus) 2 zeros, discontinuity\
2\'92s COMPLEMENT-always increasing, allows negative numbers, 1 zero, discontinuity\
BIASED- always increasing, allows negative numbers, 1 zero(not at 0x00), continuous\
\
\
when it asks about  what value the number is in the following bases, each digit in sample number ex.130 is the how many times that number in that respective base number.\
ex. 130 in base 4 is 0*4^0 + 3 *4^1 + 1 * 4^2 = 28. (COPY TO CHEAT SHEET)\
\
\
floating point bias: 2^(n-1) - 1 COPY\
\
\
COPY HOW TO DO SLIDE 30 ON CHEAT SHEET TA REVIEW\
\
\
\
\
\
\
\
\
}